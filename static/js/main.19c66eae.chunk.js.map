{"version":3,"sources":["helper.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["getSelectedTab","tabs","selectedId","find","tab","id","Tabs","onTabSelected","selectedTab","className","map","classNames","href","onClick","handleClick","title","content","App","useState","selectedTabId","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"2MAEaA,EAAiB,SAC5BC,EACAC,GAEA,OAAOD,EAAKE,MAAK,SAAAC,GAAG,OAAIA,EAAIC,KAAOH,MAAeD,EAAK,I,OCK5CK,EAAwB,SAAC,GAI/B,IAHLL,EAGI,EAHJA,KACAC,EAEI,EAFJA,WACAK,EACI,EADJA,cAEMC,EAAcR,EAAeC,EAAMC,GAOzC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAN,GAAG,OACX,oBACEK,UAAWE,IACT,CAAE,YAAaP,EAAIC,KAAOG,EAAYH,KAExC,UAAQ,MAJV,SAOE,mBACEO,KAAI,WAAMR,EAAIC,IACd,UAAQ,UACRQ,QAAS,kBArBH,SAACT,GACfA,EAAIC,KAAOH,GACbK,EAAcH,GAmBWU,CAAYV,IAH7B,SAKGA,EAAIW,SAPFX,EAAIC,WAcjB,qBAAKI,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYQ,cCxCRf,EAAc,CACzB,CAAEI,GAAI,QAASU,MAAO,QAASC,QAAS,eACxC,CAAEX,GAAI,QAASU,MAAO,QAASC,QAAS,eACxC,CAAEX,GAAI,QAASU,MAAO,QAASC,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASjB,EAAK,GAAGI,IAA3D,mBAAOc,EAAP,KAAsBC,EAAtB,KAUA,OACE,sBAAKX,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCATiBT,EAAeC,EAAMkB,GAEtBJ,SAUhB,cAAC,EAAD,CACEd,KAAMA,EACNC,WAAYiB,EACZZ,cAVgB,SAACH,GAAD,OAAcgB,EAAiBhB,EAAIC,WCpB3DgB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.19c66eae.chunk.js","sourcesContent":["import { Tab } from './types/types';\n\nexport const getSelectedTab = (\n  tabs: Tab[],\n  selectedId: string,\n): Tab => {\n  return tabs.find(tab => tab.id === selectedId) || tabs[0];\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Tab } from '../../types/types';\nimport { getSelectedTab } from '../../helper';\n\ninterface Props {\n  tabs: Tab[],\n  selectedId: string,\n  onTabSelected: (tab: Tab) => void,\n}\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedId,\n  onTabSelected,\n}) => {\n  const selectedTab = getSelectedTab(tabs, selectedId);\n  const handleClick = (tab: Tab) => {\n    if (tab.id !== selectedId) {\n      onTabSelected(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames(\n                { 'is-active': tab.id === selectedTab.id },\n              )}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => handleClick(tab)}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tab } from './types/types';\nimport { Tabs } from './components/Tabs';\nimport { getSelectedTab } from './helper';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const getTitle = () => {\n    const currentTab = getSelectedTab(tabs, selectedTabId);\n\n    return currentTab.title;\n  };\n\n  const onTabSelected = (tab: Tab) => setSelectedTabId(tab.id);\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${getTitle()}`}\n      </h1>\n      <Tabs\n        tabs={tabs}\n        selectedId={selectedTabId}\n        onTabSelected={onTabSelected}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}